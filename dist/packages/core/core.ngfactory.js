/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 
import * as i0 from "@angular/core";
import * as i1 from "@agm/core";
var AgmCoreModuleNgFactory = i0.ɵcmf(i1.AgmCoreModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, []], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(1073742336, i1.AgmCoreModule, i1.AgmCoreModule, [])]); });
export { AgmCoreModuleNgFactory as AgmCoreModuleNgFactory };
var styles_AgmMap = [".agm-map-container-inner[_ngcontent-%COMP%] {\n      width: inherit;\n      height: inherit;\n    }\n    .agm-map-content[_ngcontent-%COMP%] {\n      display:none;\n    }"];
var RenderType_AgmMap = i0.ɵcrt({ encapsulation: 0, styles: styles_AgmMap, data: {} });
export { RenderType_AgmMap as RenderType_AgmMap };
export function View_AgmMap_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 0, "div", [["class", "agm-map-container-inner sebm-google-map-container-inner"]], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 1, "div", [["class", "agm-map-content"]], null, null, null, null, null)), i0.ɵncd(null, 0)], null, null); }
export function View_AgmMap_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 11, "agm-map", [], [[2, "sebm-google-map-container", null]], null, null, View_AgmMap_0, RenderType_AgmMap)), i0.ɵprd(4608, null, i1.MarkerManager, i1.MarkerManager, [i1.GoogleMapsAPIWrapper, i0.NgZone]), i0.ɵprd(4608, null, i1.InfoWindowManager, i1.InfoWindowManager, [i1.GoogleMapsAPIWrapper, i0.NgZone, i1.MarkerManager]), i0.ɵprd(4608, null, i1.CircleManager, i1.CircleManager, [i1.GoogleMapsAPIWrapper, i0.NgZone]), i0.ɵprd(4608, null, i1.RectangleManager, i1.RectangleManager, [i1.GoogleMapsAPIWrapper, i0.NgZone]), i0.ɵprd(4608, null, i1.PolylineManager, i1.PolylineManager, [i1.GoogleMapsAPIWrapper, i0.NgZone]), i0.ɵprd(4608, null, i1.PolygonManager, i1.PolygonManager, [i1.GoogleMapsAPIWrapper, i0.NgZone]), i0.ɵprd(4608, null, i1.KmlLayerManager, i1.KmlLayerManager, [i1.GoogleMapsAPIWrapper, i0.NgZone]), i0.ɵprd(4608, null, i1.DataLayerManager, i1.DataLayerManager, [i1.GoogleMapsAPIWrapper, i0.NgZone]), i0.ɵprd(512, null, i1.GoogleMapsAPIWrapper, i1.GoogleMapsAPIWrapper, [i1.MapsAPILoader, i0.NgZone]), i0.ɵprd(512, null, i1.ɵa, i1.ɵa, [i1.MapsAPILoader]), i0.ɵdid(11, 770048, null, 0, i1.AgmMap, [i0.ElementRef, i1.GoogleMapsAPIWrapper, i1.ɵa], null, null)], function (_ck, _v) { _ck(_v, 11, 0); }, function (_ck, _v) { var currVal_0 = true; _ck(_v, 0, 0, currVal_0); }); }
var AgmMapNgFactory = i0.ɵccf("agm-map", i1.AgmMap, View_AgmMap_Host_0, { longitude: "longitude", latitude: "latitude", zoom: "zoom", minZoom: "minZoom", maxZoom: "maxZoom", draggable: "mapDraggable", disableDoubleClickZoom: "disableDoubleClickZoom", disableDefaultUI: "disableDefaultUI", scrollwheel: "scrollwheel", backgroundColor: "backgroundColor", draggableCursor: "draggableCursor", draggingCursor: "draggingCursor", keyboardShortcuts: "keyboardShortcuts", zoomControl: "zoomControl", zoomControlOptions: "zoomControlOptions", styles: "styles", usePanning: "usePanning", streetViewControl: "streetViewControl", streetViewControlOptions: "streetViewControlOptions", fitBounds: "fitBounds", scaleControl: "scaleControl", scaleControlOptions: "scaleControlOptions", mapTypeControl: "mapTypeControl", mapTypeControlOptions: "mapTypeControlOptions", panControl: "panControl", panControlOptions: "panControlOptions", rotateControl: "rotateControl", rotateControlOptions: "rotateControlOptions", fullscreenControl: "fullscreenControl", fullscreenControlOptions: "fullscreenControlOptions", mapTypeId: "mapTypeId", clickableIcons: "clickableIcons", gestureHandling: "gestureHandling" }, { mapClick: "mapClick", mapRightClick: "mapRightClick", mapDblClick: "mapDblClick", centerChange: "centerChange", boundsChange: "boundsChange", mapTypeIdChange: "mapTypeIdChange", idle: "idle", zoomChange: "zoomChange", mapReady: "mapReady" }, ["*"]);
export { AgmMapNgFactory as AgmMapNgFactory };
var styles_AgmInfoWindow = [];
var RenderType_AgmInfoWindow = i0.ɵcrt({ encapsulation: 2, styles: styles_AgmInfoWindow, data: {} });
export { RenderType_AgmInfoWindow as RenderType_AgmInfoWindow };
export function View_AgmInfoWindow_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, "div", [["class", "agm-info-window-content"]], null, null, null, null, null)), i0.ɵncd(null, 0)], null, null); }
export function View_AgmInfoWindow_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, "agm-info-window", [], null, null, null, View_AgmInfoWindow_0, RenderType_AgmInfoWindow)), i0.ɵdid(1, 770048, null, 0, i1.AgmInfoWindow, [i1.InfoWindowManager, i0.ElementRef], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }
var AgmInfoWindowNgFactory = i0.ɵccf("agm-info-window", i1.AgmInfoWindow, View_AgmInfoWindow_Host_0, { latitude: "latitude", longitude: "longitude", disableAutoPan: "disableAutoPan", zIndex: "zIndex", maxWidth: "maxWidth", isOpen: "isOpen" }, { infoWindowClose: "infoWindowClose" }, ["*"]);
export { AgmInfoWindowNgFactory as AgmInfoWindowNgFactory };
//# sourceMappingURL=core.ngfactory.js.map